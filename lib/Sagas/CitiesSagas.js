var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.updateCity_id=updateCity_id;exports.getCities=getCities;var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));var _effects=require("redux-saga/effects");var _CitiesRedux=_interopRequireDefault(require("../Redux/CitiesRedux.js"));var _marked=_regenerator.default.mark(updateCity_id),_marked2=_regenerator.default.mark(getCities);function updateCity_id(action){var city_id;return _regenerator.default.wrap(function updateCity_id$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;if(!action.city_id){_context.next=6;break;}city_id=action.payload.city_id;console.log(city_id,'from citysaga');_context.next=6;return(0,_effects.put)(_CitiesRedux.default.updateCity_id(city_id));case 6:_context.next=12;break;case 8:_context.prev=8;_context.t0=_context["catch"](0);_context.next=12;return(0,_effects.put)(_CitiesRedux.default.updateCities_idFailure(_context.t0.message));case 12:case"end":return _context.stop();}}},_marked,null,[[0,8]]);}function getCities(api,action){var response,cities;return _regenerator.default.wrap(function getCities$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return(0,_effects.call)(api.getCities,action.payload);case 3:response=_context2.sent;if(!response.ok){_context2.next=10;break;}cities=response.data.location_suggestions;_context2.next=8;return(0,_effects.put)(_CitiesRedux.default.getCitiesSuccess(cities));case 8:_context2.next=12;break;case 10:_context2.next=12;return(0,_effects.put)(_CitiesRedux.default.getCitiesFailure('Connection problems :('));case 12:_context2.next=18;break;case 14:_context2.prev=14;_context2.t0=_context2["catch"](0);_context2.next=18;return(0,_effects.put)(_CitiesRedux.default.getCitiesFailure(_context2.t0.message));case 18:case"end":return _context2.stop();}}},_marked2,null,[[0,14]]);}